<Application x:Class="_02350SuperSimpleMVVMDemo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Model="clr-namespace:_02350SuperSimpleMVVMDemo.Model"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- This Data Template tells the View (Window) how to visually show the Shape class. -->
        <!-- If you remove this template the Shape will be show with a TextBlock, that shows the return value of the "ToString()" method. -->
        <!-- The Data Type tells the WPF engine, that this Data Template should be applied for the Shape class, in the Model namespace (Java: package). -->
        <DataTemplate DataType="{x:Type Model:Shape}">
            <Canvas>
                <!-- This shows an Ellipse, which is Blue, with a 6 DIP (Device Independant Pixels) Purple border. -->
                <!-- The Left and Top coordinates of the ellipse (X and Y coordinates, with X being from the left and Y being from the top), -->
                <!--  are bound to the X and Y properties of the Shape object. -->
                <!-- Likewise the Width and Height of the Ellipse are bound the the Width and Height properties of the Shape object. -->
                <Ellipse Fill="Blue" Stroke="Purple" StrokeThickness="6" StrokeDashArray="3.1" Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" Width="{Binding Width}" Height="{Binding Height}"/>
            </Canvas>
        </DataTemplate>
        <!-- Similar to the Data Template for the Shape, this describes how the Line class should be visually shown. -->
        <DataTemplate DataType="{x:Type Model:Line}">
            <Canvas>
                <Line Stroke="Red" X1="{Binding From.CenterX}" Y1="{Binding From.CenterY}" X2="{Binding To.CenterX}" Y2="{Binding To.CenterY}" StrokeThickness="10"/>
            </Canvas>
        </DataTemplate>
    </Application.Resources>
</Application>
